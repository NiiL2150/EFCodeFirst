// <auto-generated />
using System;
using EFCodeFirst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCodeFirst.Migrations
{
    [DbContext(typeof(OlympicContext))]
    [Migration("20211107113635_CreateDataBase")]
    partial class CreateDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCodeFirst.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Medal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medals");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportId");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("EFCodeFirst.Models.SportSportsman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MedalId")
                        .HasColumnType("int");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.Property<int?>("SportsmanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedalId");

                    b.HasIndex("SportId");

                    b.HasIndex("SportsmanId");

                    b.ToTable("SportSportsmen");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Sportsman", b =>
                {
                    b.Property<int>("SportsmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportsmanId");

                    b.HasIndex("CountryId");

                    b.ToTable("Sportsmen");
                });

            modelBuilder.Entity("EFCodeFirst.Models.SportSportsman", b =>
                {
                    b.HasOne("EFCodeFirst.Models.Medal", "Medal")
                        .WithMany("SportSportsman")
                        .HasForeignKey("MedalId");

                    b.HasOne("EFCodeFirst.Models.Sport", "Sport")
                        .WithMany("SportSportsmen")
                        .HasForeignKey("SportId");

                    b.HasOne("EFCodeFirst.Models.Sportsman", "Sportsman")
                        .WithMany("SportSportsmen")
                        .HasForeignKey("SportsmanId");

                    b.Navigation("Medal");

                    b.Navigation("Sport");

                    b.Navigation("Sportsman");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Sportsman", b =>
                {
                    b.HasOne("EFCodeFirst.Models.Country", "Country")
                        .WithMany("Sportsmen")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Country", b =>
                {
                    b.Navigation("Sportsmen");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Medal", b =>
                {
                    b.Navigation("SportSportsman");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Sport", b =>
                {
                    b.Navigation("SportSportsmen");
                });

            modelBuilder.Entity("EFCodeFirst.Models.Sportsman", b =>
                {
                    b.Navigation("SportSportsmen");
                });
#pragma warning restore 612, 618
        }
    }
}
